{
  "name": "grunt-language2js",
  "tagline": "Grunt plugin for converting .properties language files into an AngularJS module",
  "body": "# grunt-language2js\r\n\r\n> Grunt plugin for converting .properties language files into an AngularJS module utilizing [angular-translate](https://angular-translate.github.io/).\r\n\r\n## Getting Started\r\nThis plugin requires Grunt `~0.4.5`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-language2js --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-language2js');\r\n```\r\n\r\n## The \"language2js\" task\r\n\r\n### Overview\r\nIn your project's Gruntfile, add a section named `language2js` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  language2js: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n});\r\n```\r\n\r\n### Options\r\n\r\n#### options.module\r\nType: `String`\r\nDefault value: `'language-properties'`\r\n\r\nA string value that is used as the module name for the AngularJS module\r\n\r\n#### options.localeSeparator\r\nType: `String`\r\nDefault value: `'.'`\r\n\r\nA character that is used to separate the locale from the rest of the file name - will be matched according to somefilename{{localeSeparator}}{{locale}}.properties\r\n\r\n### Usage Examples\r\n\r\n#### Default Options\r\nIn this example, the default options are used to generate an AngularJS module from all `*.properties` files in the solution.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  language2js: {\r\n    options: {},\r\n    files: {\r\n      'dest/angular-language-module.js': ['**/*.properties'],\r\n    },\r\n  },\r\n});\r\n```\r\n\r\n#### Custom AngularJS module name\r\nIn this example, the generated AngularJS module will get `my-language-module` as its module name.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  language2js: {\r\n    options: {\r\n        module: \"my-language-module\"\r\n    },\r\n    files: {\r\n      'dest/angular-language-module.js': ['**/*.properties'],\r\n    },\r\n  },\r\n});\r\n```\r\n\r\n## Contributing\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}